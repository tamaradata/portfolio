/*

Calculating Churn Rates in SQL using temp tables, joins, case statements and aggregrate functions

*/



WITH months AS
 (select '2017-01-01' as first_day,'2017-01-31' as last_day
 UNION
 select '2017-02-01' as first_day, '2017-02-28' as last_day
 UNION
select '2017-03-01' as first_day, '2017-03-30' as last_day),
cross_join AS 
(select * 
from subscriptions cross join months),
status AS (select
id,
first_day AS month,
CASE
  when(subscription_start < first_day) AND (
  subscription_end > first_day OR subscription_end is NULL)
  AND (segment = 87) THEN 1
  Else 0
  End as is_active_87,

CASE
  when (subscription_start < first_day) AND
  (subscription_end > first_day OR subscription_end is NULL)
  AND (segment = 30) THEN 1
  Else 0
  End as is_active_30,

CASE
  WHEN (subscription_end BETWEEN first_day AND last_day) AND (segment =87) THEN 1
  ELSE 0
  END AS is_canceled_87,

CASE
  WHEN (subscription_end BETWEEN first_day AND last_day) AND (segment = 30) THEN 1
  ELSE 0
  END AS is_canceled_30
  
  FROM cross_join),

  status_aggregate AS 
  (SELECT month,
  SUM(is_active_87) AS sum_active_87,
  SUM(is_active_30) AS sum_active_30,
  SUM(is_canceled_87) AS sum_canceled_87,
  SUM(is_canceled_30) AS sum_canceled_30
  FROM status
  GROUP BY month)

SELECT
month,
1.0 * sum_canceled_87/sum_active_87 AS churn_rate_87,
1.0 * sum_canceled_30/sum_active_30 AS churn_rate_30
from status_aggregate;



